const query=obj=>Object.keys(obj).map((k=>encodeURIComponent(k)+"="+encodeURIComponent(obj[k]))).join("&"),url_prefix=document.querySelector("body").getAttribute("data-urlprefix"),markdown=window.markdownit({html:!0}).use(texmath,{engine:katex,delimiters:"dollars",katexOptions:{macros:{"\\RR":"\\mathbb{R}"}}}),message_box=document.getElementById("messages"),message_input=document.getElementById("message-input"),box_conversations=document.querySelector(".top"),spinner=box_conversations.querySelector(".spinner"),stop_generating=document.querySelector(".stop-generating"),send_button=document.querySelector("#send-button"),user_image=`<img src="${url_prefix}/assets/img/user.png" alt="User Avatar">`,gpt_image=`<img src="${url_prefix}/assets/img/gpt.png" alt="GPT Avatar">`;let prompt_lock=!1;hljs.addPlugin(new CopyButtonPlugin),message_input.addEventListener("blur",(()=>{window.scrollTo(0,0)})),message_input.addEventListener("focus",(()=>{document.documentElement.scrollTop=document.documentElement.scrollHeight}));const delete_conversations=async()=>{localStorage.clear(),await new_conversation()},handle_ask=async()=>{message_input.style.height="80px",window.scrollTo(0,0);let message=message_input.value;message.length>0&&(message_input.value="",message_input.dispatchEvent(new Event("input")),await ask_gpt(message))},remove_cancel_button=async()=>{stop_generating.classList.add("stop-generating-hiding"),setTimeout((()=>{stop_generating.classList.remove("stop-generating-hiding"),stop_generating.classList.add("stop-generating-hidden")}),300)},ask_gpt=async message=>{try{message_input.value="",message_input.innerHTML="",message_input.innerText="",add_conversation(window.conversation_id,message.substr(0,40)),window.scrollTo(0,0),window.controller=new AbortController,model=document.getElementById("model"),provider=document.getElementById("provider"),prompt_lock=!0,window.text="",window.token=message_id(),stop_generating.classList.remove("stop-generating-hidden"),add_user_message_box(message),message_box.scrollTop=message_box.scrollHeight,window.scrollTo(0,0),await new Promise((r=>setTimeout(r,500))),window.scrollTo(0,0),message_box.innerHTML+=DOMPurify.sanitize(`\n\t\t\t<div class="message">\n\t\t\t\t<div class="avatar-container">\n\t\t\t\t\t${gpt_image}\n\t\t\t\t</div>\n\t\t\t\t<div class="content" id="gpt_${window.token}">\n\t\t\t\t\t<div id="cursor"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),message_box.scrollTop=message_box.scrollHeight,window.scrollTo(0,0),await new Promise((r=>setTimeout(r,1e3))),window.scrollTo(0,0);const reader=(await fetch(`${url_prefix}/backend-api/v2/conversation`,{method:"POST",signal:window.controller.signal,headers:{"content-type":"application/json",accept:"text/event-stream"},body:JSON.stringify({temperature:.2,top_k:10,typical_p:.8,no_repeat_n:2,early_stopping:!0,frequency_WPF_penalty:2,max_tokens:2048,conversation_id:window.conversation_id,action:"_ask",model:model.options[model.selectedIndex].value,provider:provider.options[provider.selectedIndex].value,meta:{id:window.token,content:{conversation:await get_conversation(window.conversation_id),internet_access:!0,content_type:"text",parts:[{content:message,role:"user"}]}}})})).body.getReader();for(;;){const{value:value,done:done}=await reader.read();if(done)break;chunk=decodeUnicode((new TextDecoder).decode(value)),text+=chunk,document.getElementById(`gpt_${window.token}`).innerHTML=markdown.render(text),document.querySelectorAll("code").forEach((el=>{hljs.highlightElement(el)})),window.scrollTo(0,0),message_box.scrollTo({top:message_box.scrollHeight,behavior:"auto"})}add_message(window.conversation_id,"user",message),add_message(window.conversation_id,"assistant",text),message_box.scrollTop=message_box.scrollHeight,await remove_cancel_button(),prompt_lock=!1,await load_conversations(20,0),window.scrollTo(0,0)}catch(e){add_message(window.conversation_id,"user",message),message_box.scrollTop=message_box.scrollHeight,await remove_cancel_button(),prompt_lock=!1,await load_conversations(20,0),console.log(e);let cursorDiv=document.getElementById("cursor");if(cursorDiv&&cursorDiv.parentNode.removeChild(cursorDiv),"AbortError"!=e.name){let error_message="oops ! something went wrong, please try again / reload. [stacktrace in console]";document.getElementById(`gpt_${window.token}`).innerHTML=error_message,add_message(window.conversation_id,"assistant",error_message)}else document.getElementById(`gpt_${window.token}`).innerHTML+=" [aborted]",add_message(window.conversation_id,"assistant",text+" [aborted]");window.scrollTo(0,0)}},add_user_message_box=message=>{const messageDiv=createElement("div",{classNames:["message"]}),avatarContainer=createElement("div",{classNames:["avatar-container"],innerHTML:user_image}),contentDiv=createElement("div",{classNames:["content"],id:`user_${token}`,textContent:message});messageDiv.append(avatarContainer,contentDiv),message_box.appendChild(messageDiv)},decodeUnicode=str=>str.replace(/\\u([a-fA-F0-9]{4})/g,(function(_match,grp){return String.fromCharCode(parseInt(grp,16))})),clear_conversations=async()=>{const elements=box_conversations.childNodes;let index=elements.length;if(index>0)for(;index--;){const element=elements[index];element.nodeType===Node.ELEMENT_NODE&&"button"!==element.tagName.toLowerCase()&&box_conversations.removeChild(element)}},clear_conversation=async()=>{let messages=message_box.getElementsByTagName("div");for(;messages.length>0;)message_box.removeChild(messages[0])},delete_conversation=async conversation_id=>{localStorage.removeItem(`conversation:${conversation_id}`),window.conversation_id==conversation_id&&await new_conversation(),await load_conversations(20,0,!0)},set_conversation=async conversation_id=>{history.pushState({},null,`${url_prefix}/chat/${conversation_id}`),window.conversation_id=conversation_id,await clear_conversation(),await load_conversation(conversation_id),await load_conversations(20,0,!0)},new_conversation=async()=>{history.pushState({},null,`${url_prefix}/chat/`),window.conversation_id=uuid(),await clear_conversation(),await load_conversations(20,0,!0)},load_conversation=async conversation_id=>{let conversation=await JSON.parse(localStorage.getItem(`conversation:${conversation_id}`));console.log(conversation,conversation_id),model=document.getElementById("model"),provider=document.getElementById("provider");let hasModel=Array.from(model.options).some((option=>option.value===conversation.model)),hasProvider=Array.from(provider.options).some((option=>option.value===conversation.provider));for(item of(hasModel&&(model.value=conversation.model),hasProvider&&(provider.value=conversation.provider),conversation.items))is_assistant(item.role)?message_box.innerHTML+=DOMPurify.sanitize(load_gpt_message_box(item.content)):message_box.innerHTML+=DOMPurify.sanitize(load_user_message_box(item.content));document.querySelectorAll("code").forEach((el=>{hljs.highlightElement(el)})),message_box.scrollTo({top:message_box.scrollHeight,behavior:"smooth"}),setTimeout((()=>{message_box.scrollTop=message_box.scrollHeight}),500)},load_user_message_box=content=>{const messageDiv=createElement("div",{classNames:["message","user"]}),avatarContainer=createElement("div",{classNames:["avatar-container"],innerHTML:user_image}),contentDiv=createElement("div",{classNames:["content"]}),preElement=document.createElement("pre");return preElement.textContent=content,contentDiv.appendChild(preElement),messageDiv.append(avatarContainer,contentDiv),messageDiv.outerHTML},load_gpt_message_box=content=>`\n            <div class="message assistant">\n                <div class="avatar-container">\n                    ${gpt_image}\n                </div>\n                <div class="content">\n                    ${markdown.render(content)}\n                </div>\n            </div>\n        `,is_assistant=role=>"assistant"==role,get_conversation=async conversation_id=>(await JSON.parse(localStorage.getItem(`conversation:${conversation_id}`))).items,add_conversation=async(conversation_id,title)=>{null==localStorage.getItem(`conversation:${conversation_id}`)&&(model=document.getElementById("model"),provider=document.getElementById("provider"),localStorage.setItem(`conversation:${conversation_id}`,JSON.stringify({id:conversation_id,title:title,items:[],created_at:Date.now(),model:model.options[model.selectedIndex].value,provider:provider.options[provider.selectedIndex].value})))},add_message=async(conversation_id,role,content)=>{let before_adding=JSON.parse(localStorage.getItem(`conversation:${conversation_id}`));before_adding.items.push({role:role,content:content}),localStorage.setItem(`conversation:${conversation_id}`,JSON.stringify(before_adding))},load_conversations=async(_limit,_offset,_loader)=>{let conversations=[];for(let i=0;i<localStorage.length;i++)if(localStorage.key(i).startsWith("conversation:")){let conversation=localStorage.getItem(localStorage.key(i));conversations.push(JSON.parse(conversation))}for(conversation of(conversations.sort(((a,b)=>b.created_at-a.created_at)),await clear_conversations(),conversations))box_conversations.innerHTML+=`\n            <div class="conversation-sidebar">\n                <div class="left" onclick="set_conversation('${conversation.id}')">\n\t\t\t\t<span class="material-icons-round chat">forum</span>\n                    <span class="conversation-title">${conversation.title}</span>\n                </div>\n\t\t\t\t<span class="material-icons-round delete" onclick="delete_conversation('${conversation.id}')">delete</span>\n            </div>\n        `;document.querySelectorAll("code").forEach((el=>{hljs.highlightElement(el)}))};function h2a(str1){for(var hex=str1.toString(),str="",n=0;n<hex.length;n+=2)str+=String.fromCharCode(parseInt(hex.substr(n,2),16));return str}document.getElementById("cancelButton").addEventListener("click",(async()=>{window.controller.abort(),console.log(`aborted ${window.conversation_id}`)}));const uuid=()=>`xxxxxxxx-xxxx-4xxx-yxxx-${Date.now().toString(16)}`.replace(/[xy]/g,(function(c){var r=16*Math.random()|0;return("x"==c?r:3&r|8).toString(16)})),message_id=()=>(random_bytes=(Math.floor(1338377565*Math.random())+2956589730).toString(2),unix=Math.floor(Date.now()/1e3).toString(2),BigInt(`0b${unix}${random_bytes}`).toString());window.onload=async()=>{load_settings_localstorage(),conversations=0;for(let i=0;i<localStorage.length;i++)localStorage.key(i).startsWith("conversation:")&&(conversations+=1);0==conversations&&localStorage.clear(),setTimeout((()=>{load_conversations(20,0)}),1),window.location.href.endsWith("#")||/\/chat\/.+/.test(window.location.href.slice(url_prefix.length))&&await load_conversation(window.conversation_id),message_input.addEventListener("keydown",(async evt=>{prompt_lock||function(){const userAgent=navigator.userAgent;return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)}()||"Enter"!==evt.key||evt.shiftKey||(evt.preventDefault(),await handle_ask())})),send_button.addEventListener("click",(async event=>{event.preventDefault(),prompt_lock||(message_input.blur(),await handle_ask())})),register_settings_localstorage()};const register_settings_localstorage=async()=>{settings_ids=["model"],settings_elements=settings_ids.map((id=>document.getElementById(id))),settings_elements.map((element=>element.addEventListener("change",(async event=>{switch(event.target.type){case"checkbox":localStorage.setItem(event.target.id,event.target.checked);break;case"select-one":localStorage.setItem(event.target.id,event.target.selectedIndex);break;default:console.warn("Unresolved element type")}}))))},load_settings_localstorage=async()=>{settings_ids=["model"],settings_elements=settings_ids.map((id=>document.getElementById(id))),settings_elements.map((element=>{if(localStorage.getItem(element.id))switch(element.type){case"checkbox":element.checked="true"===localStorage.getItem(element.id);break;case"select-one":element.selectedIndex=parseInt(localStorage.getItem(element.id));break;default:console.warn("Unresolved element type")}}))};function clearTextarea(textarea){textarea.style.removeProperty("height"),textarea.style.height=`${textarea.scrollHeight+4}px`,""===textarea.value.trim()&&textarea.value.includes("\n")&&(textarea.value="")}function createElement(tag,{classNames:classNames,id:id,innerHTML:innerHTML,textContent:textContent}={}){const el=document.createElement(tag);if(classNames&&el.classList.add(...classNames),id&&(el.id=id),innerHTML&&(el.innerHTML=DOMPurify.sanitize(innerHTML)),textContent){const preElement=document.createElement("pre");preElement.textContent=textContent,el.appendChild(preElement)}return el}